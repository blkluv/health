# Generated by Django 4.1 on 2023-05-12 16:33

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Doctor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.CharField(blank=True, max_length=2, null=True, unique=True),
                ),
                ("username", models.CharField(max_length=255, unique=True)),
                ("name", models.CharField(max_length=255)),
                (
                    "email",
                    models.EmailField(
                        default="name@name.name",
                        max_length=255,
                        unique=True,
                        validators=[
                            django.core.validators.EmailValidator(
                                message="Please enter a valid email address in the format"
                            )
                        ],
                    ),
                ),
                (
                    "phone_no",
                    models.CharField(
                        max_length=10,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Please enter a 10-digit number",
                                regex="^\\d{10}$",
                            )
                        ],
                    ),
                ),
                (
                    "account_type",
                    models.CharField(default="DOCTOR", editable=False, max_length=10),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("1", "Adult Cardiology"),
                            ("2", "Adult Neurology"),
                            ("3", "Anaesthesia"),
                            ("4", "Anaesthesia and Critical Care Medicine"),
                            ("5", "Dermatology"),
                            ("6, Nose and Throat (ENT)", "Ear, Nose and Throat (ENT)"),
                            ("7", "General Surgery"),
                            ("8", "Gynaecology / Laparoscopic / Obsterics"),
                            ("9", "Nephrology"),
                            ("10", "Ophthalmologist"),
                            ("11", "Paediatrics and Child Health"),
                            ("12", "Pain Management"),
                            ("13", "Physician /Internal Medicine"),
                            ("14", "Radiology"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="uploads/%Y/%m/%d/"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Patient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.CharField(blank=True, max_length=10, null=True, unique=True),
                ),
                ("name", models.TextField(max_length=50)),
                ("birth_date", models.DateField(blank=True)),
                (
                    "email",
                    models.EmailField(
                        default="name@name.name",
                        max_length=255,
                        unique=True,
                        validators=[
                            django.core.validators.EmailValidator(
                                message="Please enter a valid email address in the format"
                            )
                        ],
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("Male", "Male"),
                            ("Female", "Female"),
                            ("Non-Binary", "Non-Binary"),
                            ("Prefer Not To Say", "Prefer Not To Say"),
                        ],
                        max_length=20,
                    ),
                ),
                ("phone_no", models.IntegerField()),
                (
                    "account_type",
                    models.CharField(default="PATIENT", editable=False, max_length=10),
                ),
                ("kin_name", models.TextField(max_length=50, null=True)),
                ("kin_contact", models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Appointment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "service",
                    models.CharField(
                        choices=[
                            ("1", "Adult Cardiology"),
                            ("2", "Adult Neurology"),
                            ("3", "Anaesthesia"),
                            ("4", "Anaesthesia and Critical Care Medicine"),
                            ("5", "Dermatology"),
                            ("6, Nose and Throat (ENT)", "Ear, Nose and Throat (ENT)"),
                            ("7", "General Surgery"),
                            ("8", "Gynaecology / Laparoscopic / Obsterics"),
                            ("9", "Nephrology"),
                            ("10", "Ophthalmologist"),
                            ("11", "Paediatrics and Child Health"),
                            ("12", "Pain Management"),
                            ("13", "Physician /Internal Medicine"),
                            ("14", "Radiology"),
                        ],
                        default="Physician / Internal Medicine",
                        max_length=50,
                    ),
                ),
                ("day", models.DateField(default=datetime.datetime.now)),
                (
                    "time",
                    models.CharField(
                        choices=[
                            ("3 PM", "3 PM"),
                            ("3:30 PM", "3:30 PM"),
                            ("4 PM", "4 PM"),
                            ("4:30 PM", "4:30 PM"),
                            ("5 PM", "5 PM"),
                            ("5:30 PM", "5:30 PM"),
                            ("6 PM", "6 PM"),
                            ("6:30 PM", "6:30 PM"),
                            ("7 PM", "7 PM"),
                            ("7:30 PM", "7:30 PM"),
                        ],
                        default="3 PM",
                        max_length=10,
                    ),
                ),
                (
                    "time_ordered",
                    models.DateTimeField(blank=True, default=datetime.datetime.now),
                ),
                (
                    "uuid",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="booking.patient",
                    ),
                ),
            ],
        ),
    ]
