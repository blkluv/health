# Generated by Django 4.1 on 2023-05-15 10:25

import booking.models
import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Persona",
            fields=[
                (
                    "uuid",
                    models.UUIDField(
                        auto_created=True,
                        default=uuid.UUID("ecbfe575-5a8f-4ba8-bfb0-4fe347b9e2c9"),
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                (
                    "email",
                    models.EmailField(
                        max_length=255,
                        unique=True,
                        validators=[
                            django.core.validators.EmailValidator(
                                message="Please enter a valid email address in the format"
                            ),
                            django.core.validators.RegexValidator(
                                inverse_match=True,
                                message="Please provide a valid email address.",
                                regex="^name@name.name",
                            ),
                        ],
                    ),
                ),
                (
                    "birth_date",
                    models.DateField(validators=[booking.models.at_least_age_18]),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("Male", "Male"),
                            ("Female", "Female"),
                            ("Non-Binary", "Non-Binary"),
                            ("Prefer Not To Say", "Prefer Not To Say"),
                        ],
                        default="Prefer Not To Say",
                        max_length=20,
                    ),
                ),
                ("phone_no", models.IntegerField()),
                (
                    "account_type",
                    models.CharField(
                        choices=[
                            ("ADMIN", "ADMIN"),
                            ("DOCTOR", "DOCTOR"),
                            ("PATIENT", "PATIENT"),
                        ],
                        default="PATIENT",
                        max_length=10,
                    ),
                ),
                (
                    "kin_name",
                    models.CharField(
                        blank=True, help_text="*Optional", max_length=50, null=True
                    ),
                ),
                (
                    "kin_contact",
                    models.IntegerField(blank=True, help_text="*Optional", null=True),
                ),
                (
                    "password",
                    models.CharField(
                        default="password",
                        max_length=30,
                        validators=[
                            django.core.validators.MinLengthValidator(
                                limit_value=8,
                                message="Please ensure the password is at least 8 characters",
                            ),
                            django.core.validators.RegexValidator(
                                inverse_match=True,
                                message="Please use a different password",
                                regex="^password",
                            ),
                        ],
                    ),
                ),
                ("is_superuser", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "last_update",
                    models.DateTimeField(auto_now=True, verbose_name="last updated"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", booking.models.PersonaManager()),
            ],
        ),
        migrations.CreateModel(
            name="Doctor",
            fields=[
                (
                    "persona_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("1", "Adult Cardiology"),
                            ("2", "Adult Neurology"),
                            ("3", "Anaesthesia"),
                            ("4", "Anaesthesia and Critical Care Medicine"),
                            ("5", "Dermatology"),
                            ("6", "Ear, Nose and Throat (ENT)"),
                            ("7", "General Surgery"),
                            ("8", "Gynaecology / Laparoscopic / Obsterics"),
                            ("9", "Interventional Cardiology"),
                            ("10", "Nephrology"),
                            ("11", "Ophthalmologist"),
                            ("12", "Paediatrics and Child Health"),
                            ("13", "Pain Management"),
                            ("14", "Physician /Internal Medicine"),
                            ("15", "Radiology"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="uploads/%Y/%m/%d/",
                        verbose_name="Images",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            bases=("booking.persona",),
            managers=[
                ("objects", booking.models.PersonaManager()),
            ],
        ),
        migrations.CreateModel(
            name="Appointment",
            fields=[
                ("app_id", models.BigAutoField(primary_key=True, serialize=False)),
                (
                    "service",
                    models.CharField(
                        choices=[
                            ("1", "Adult Cardiology"),
                            ("2", "Adult Neurology"),
                            ("3", "Anaesthesia"),
                            ("4", "Anaesthesia and Critical Care Medicine"),
                            ("5", "Dermatology"),
                            ("6", "Ear, Nose and Throat (ENT)"),
                            ("7", "General Surgery"),
                            ("8", "Gynaecology / Laparoscopic / Obsterics"),
                            ("9", "Interventional Cardiology"),
                            ("10", "Nephrology"),
                            ("11", "Ophthalmologist"),
                            ("12", "Paediatrics and Child Health"),
                            ("13", "Pain Management"),
                            ("14", "Physician /Internal Medicine"),
                            ("15", "Radiology"),
                        ],
                        default="Physician / Internal Medicine",
                        max_length=50,
                    ),
                ),
                ("day", models.DateField(default=datetime.datetime.now)),
                (
                    "time",
                    models.CharField(
                        choices=[
                            ("8 AM", "8 AM"),
                            ("9 AM", "9 AM"),
                            ("10 AM", "10 AM"),
                            ("11 AM", "11 AM"),
                            ("11:30 AM", "11:30 AM"),
                            ("12 PM", "12 PM"),
                            ("1:30 PM", "1:30 PM"),
                            ("2 PM", "2 PM"),
                        ],
                        default="3 PM",
                        max_length=10,
                    ),
                ),
                (
                    "time_ordered",
                    models.DateTimeField(blank=True, default=datetime.datetime.now),
                ),
                ("price", models.PositiveIntegerField()),
                (
                    "uuid",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
